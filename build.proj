<Project DefaultTargets="Build" InitialTargets="_Setup" TreatAsLocalProperty="Configuration">
  <Import Project="build\corebuild.props" />

  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <IntermediateOutputPath>$(RestoreOutputPath)\</IntermediateOutputPath>
    <Out Condition="'$(Out)' == ''">$(MSBuildThisFileDirectory)out</Out>
    <AdditionalProperties>Configuration=$(Configuration);PackageOutputPath=$(Out);NuGetBuildTasksPackTargets=DONT-WANT-SDK-PACK</AdditionalProperties>

    <!-- Validate/init feed before pushing. Typically, init is done once, manually. Validate takes time -->
    <SleetValidate Condition="'$(SleetValidate)' == ''">false</SleetValidate>

    <!-- Additional properties for Push -->
    <NuGetPath Condition="'$(NuGetPath)' == ''">$(RestoreOutputPath)</NuGetPath>
    <NuGet Condition="'$(NuGet)' == ''">$(NuGetPath)\nuget.exe</NuGet>
    <NuGetSource Condition="'$(NuGetSource)' == ''">nuget.org</NuGetSource>
    <NuGetUrl Condition="'$(NuGetUrl)' == ''">https://dist.nuget.org/win-x86-commandline/latest/nuget.exe</NuGetUrl>
    <!--<NuGetApiKey>REQUIRED_API_KEY_FOR_PUSH</NuGetApiKey>-->
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="GitInfo" Version="*" PrivateAssets="all" />
    <PackageReference Include="xunit.runner.console" Version="2.3.0-beta1-build3642" />
    <PackageReference Include="Sleet.Azure" Version="*" />
    <PackageReference Include="JsonPoke.MSBuild" Version="*" />
  </ItemGroup>

  <ItemDefinitionGroup>
    <Solution>
      <AdditionalProperties>$(AdditionalProperties)</AdditionalProperties>
    </Solution>
  </ItemDefinitionGroup>

  <ItemGroup>
    <Solution Include="src\*.sln" />
  </ItemGroup>

  <Target Name="Build">
    <Message Text="Building AssemblyVersion=$(AssemblyVersion), PackageVersion=$(PackageVersion)" Importance="high" />
    <Message Text="##vso[build.updatebuildnumber]$(PackageVersion)" Importance="high" Condition="'$(TF_BUILD)' == 'true'" />
    
    <MSBuild Projects="@(Solution)" Targets="Build" />

    <!-- Also build the tests for Dev14 (by default it's only compiled for dev15) -->
    <MSBuild Projects="test\Xamarin.VSSDK.Tests\Xamarin.VSSDK.Tests.csproj" Targets="Build" Properties="$(AdditionalProperties);Dev=14.0" />

    <Copy SourceFiles="NuGet.Config" DestinationFolder="$(Out)" />
  </Target>

  <Target Name="BeforePush" BeforeTargets="Push">
    <ItemGroup>
      <Package Include="$(Out)\*.nupkg" />
    </ItemGroup>
  </Target>

  <Target Name="Publish" DependsOnTargets="Push" />

  <Target Name="Test" DependsOnTargets="Build">
    <PropertyGroup>
      <XmlTestFile>$(Out)\TestResults.xml</XmlTestFile>
      <HtmlTestFile>$(Out)\TestResults.html</HtmlTestFile>
    </PropertyGroup>

    <ItemGroup>
      <_TestAssembly Include="test\**\bin\**\*Tests.dll" />
      <TestAssembly Include="@(_TestAssembly)"
									  Condition="$([System.String]::new('%(Filename)').EndsWith('AcceptanceTests')) == 'false' And '%(Filename)' != 'Roslyn.Services.Editor.UnitTests'" />
    </ItemGroup>

    <Exec Command="&quot;$(XunitConsolePathX86)&quot; &quot;@(TestAssembly, '&quot; &quot;')&quot; $(XunitOptions) -html &quot;$(HtmlTestFile)&quot; -xml &quot;$(XmlTestFile)&quot;"
			  Condition="'@(TestAssembly)' != ''">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
    </Exec>

    <Message Text="All tests passed, for full log see $(HtmlTestFile)" Condition="'@(TestAssembly)' != '' And '$(ExitCode)' == '0'" Importance="high" />
    <Error Text="There were test failures, for full log see $(HtmlTestFile)" Condition="'@(TestAssembly)' != '' And '$(ExitCode)' != '0'" />
  </Target>

  <Target Name="Acceptance" DependsOnTargets="Build">
    <PropertyGroup>
      <XmlTestFile>$(Out)AcceptanceResults.xml</XmlTestFile>
      <HtmlTestFile>$(Out)AcceptanceResults.html</HtmlTestFile>
    </PropertyGroup>

    <ItemGroup>
      <TestAssembly Include="test\**\bin\**\*AcceptanceTests.dll" />
    </ItemGroup>

    <Exec Command="&quot;$(XunitConsolePathX86)&quot; &quot;@(TestAssembly, '&quot; &quot;')&quot; $(XunitOptions) -html &quot;$(HtmlTestFile)&quot; -xml &quot;$(XmlTestFile)&quot;"
			  Condition="'@(TestAssembly)' != ''">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
    </Exec>

    <Message Text="All tests passed, for full log see $(HtmlTestFile)" Condition="'@(TestAssembly)' != '' And '$(ExitCode)' == '0'" Importance="high" />
    <Error Text="There were test failures, for full log see $(HtmlTestFile)" Condition="'@(TestAssembly)' != '' And '$(ExitCode)' != '0'" />
  </Target>

  <Target Name="Clean">
    <Exec Command='for /d /r . %%d in (bin,obj,.vs) do @if exist "%%d" rd /s/q "%%d"'
		      Condition="'$(OS)' == 'Windows_NT'" />
  </Target>

  <Target Name="All" DependsOnTargets="Rebuild" />

  <Target Name="Rebuild" DependsOnTargets="Clean;Restore;Build" />

  <Target Name="_Restore" AfterTargets="Restore">
    <MSBuild BuildInParallel="true" Projects="@(Solution);test\Xamarin.VSSDK.Tests\Xamarin.VSSDK.Tests.csproj" Targets="Restore" />
  </Target>

  <Target Name="GitVersion">
    <PropertyGroup>
      <GitBaseVersionMajor>0</GitBaseVersionMajor>
      <GitBaseVersionMinor>1</GitBaseVersionMinor>
      <GitBaseVersionPatch>0</GitBaseVersionPatch>
      <GitSemVerMajor>0</GitSemVerMajor>
      <GitSemVerMinor>1</GitSemVerMinor>
      <GitSemVerPatch>0</GitSemVerPatch>
      <GitCommits>0</GitCommits>
    </PropertyGroup>
  </Target>

  <Target Name="_Setup" DependsOnTargets="_SetVersion">
    <!-- Update AppVeyor build # to match the actual one being used -->
    <Exec Command="appveyor UpdateBuild -Version $(PackageVersion)"
			  Condition="'$(APPVEYOR)' == 'true' And '$(target)' != 'Restore'"
			  ContinueOnError="true" />

    <MakeDir Directories="$(Out)" Condition="!Exists('$(Out)')" />
  </Target>

  <Import Project="src\Version.targets" />
  <Import Project="build\corebuild.targets" />
</Project>
