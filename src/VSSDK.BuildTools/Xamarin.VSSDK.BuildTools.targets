<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <IsVsixExtension>true</IsVsixExtension>

    <!-- Enable DeployExtension by default for Debug builds -->
    <DeployExtension Condition="'$(DeployExtension)' == '' and '$(Configuration)' == 'Debug'">true</DeployExtension>

    <!-- Disable CreateVsixContainer by default for Debug builds -->
    <CreateVsixContainer Condition="'$(CreateVsixContainer)' == '' and '$(Configuration)' == 'Debug'">false</CreateVsixContainer>
  </PropertyGroup>

  <Import Project="$(VsSDKInstall)\Microsoft.VSSDK.targets" Condition="'$(VsSDKInstall)' != ''" />

  <Import Project="Xamarin.VSSDK.BuildTools.VsixManifest.targets" />
  <Import Project="Xamarin.VSSDK.BuildTools.ValidateVsixReferencedAssemblies.targets" />
  <Import Project="Xamarin.VSSDK.BuildTools.VSSDKVersion.targets" />

  <PropertyGroup>
    <OverrideDeployVsixExtensionFiles Condition="'$(OverrideDeployVsixExtensionFiles)' == '' and '$(Dev)' != '' and '$(Dev)' &gt;= '14.0'">true</OverrideDeployVsixExtensionFiles>
  </PropertyGroup>

  <Import Project="Xamarin.VSSDK.BuildTools.DeployVsixExtensionFiles.targets" Condition="'$(OverrideDeployVsixExtensionFiles)' == 'true'" />
  <Import Project="Xamarin.VSSDK.BuildTools.FindSourceVsixManifest.targets" Condition="'$(OverrideDeployVsixExtensionFiles)' == 'true' and '$(Dev)' &gt;= '15.0'" />
  <Import Project="Xamarin.VSSDK.BuildTools.GetVsixDeploymentPath.targets" Condition="'$(OverrideDeployVsixExtensionFiles)' == 'true' and '$(Dev)' &gt;= '15.0'" />
  <Import Project="Xamarin.VSSDK.BuildTools.FindExistingDeploymentPath.targets" Condition="'$(OverrideDeployVsixExtensionFiles)' == 'true' and '$(Dev)' &gt;= '15.0'" />
  <Import Project="Xamarin.VSSDK.BuildTools.GeneratePkgDef.targets" />
  <Import Project="Xamarin.VSSDK.BuildTools.GenerateBindingRedirects.targets" />

  <!-- This fixes the GetVsixSourceItems target when the project references are being evaluated in a cross targeting build -->
  <Target Name="AppendTargetFrameworkToProjectReferencesWithConfiguration" Inputs="@(_MSBuildProjectReferenceExistent)" Outputs="%(_MSBuildProjectReferenceExistent.Identity)-BATCH" AfterTargets="PrepareProjectReferences" Returns="@(ProjectReferenceWithConfiguration)">
    <PropertyGroup>
      <_ProjectReferenceIdentity>%(_MSBuildProjectReferenceExistent.Identity)</_ProjectReferenceIdentity>
      <_ProjectReferenceSetTargetFramework>%(_MSBuildProjectReferenceExistent.SetTargetFramework)</_ProjectReferenceSetTargetFramework>
    </PropertyGroup>
    <ItemGroup>
      <ProjectReferenceWithConfiguration Condition="'%(Identity)' == '$(_ProjectReferenceIdentity)'">
        <AdditionalProperties Condition="'%(ProjectReferenceWithConfiguration.AdditionalProperties)' != ''">%(ProjectReferenceWithConfiguration.AdditionalProperties);$(_ProjectReferenceSetTargetFramework)</AdditionalProperties>
        <AdditionalProperties Condition="'%(ProjectReferenceWithConfiguration.AdditionalProperties)' == ''">$(_ProjectReferenceSetTargetFramework)</AdditionalProperties>
      </ProjectReferenceWithConfiguration>
    </ItemGroup>
  </Target>

</Project>
